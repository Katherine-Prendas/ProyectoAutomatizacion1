{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-09-22T22:31:14.220Z",
    "end": "2024-09-22T22:31:43.195Z",
    "duration": 28975,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c8617e48-625e-401b-a239-bef80f9968a7",
      "title": "",
      "fullFile": "cypress\\e2e\\ProyectoAutomatizacion\\checkout.spec.cy.js",
      "file": "cypress\\e2e\\ProyectoAutomatizacion\\checkout.spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "15419b03-e15e-47c6-b9cd-75286fe6f702",
          "title": "Pruebas de Checkout",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Completar Ckeckout y ver orden",
              "fullTitle": "Pruebas de Checkout Completar Ckeckout y ver orden",
              "timedOut": null,
              "duration": 27610,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.saucedemo.com/v1/index.html\");\ncy.wait(2000);\ncy.get(\"#user-name\").click().type(\"standard_user\");\ncy.wait(2000);\ncy.get(\"#password\").click().type(\"secret_sauce\");\ncy.wait(2000);\ncy.get(\"#login-button\").click().wait(2000);\n//Agregan los productos al carrito de compras\ncy.get(\"#inventory_container > div > div:nth-child(1) > div.pricebar > button\").click().wait(1000);\ncy.get(\"#inventory_container > div > div:nth-child(2) > div.pricebar > button\").click().wait(1000);\ncy.get(\"#inventory_container > div > div:nth-child(3) > div.pricebar > button\").click().wait(1000);\n//Ir al carrito de compras\ncy.get(\"#shopping_cart_container > a > svg > path\").click().wait(3000);\n//************Verificar que todos los datos de la orden se muestren correctamente********\n// Array para almacenar la información de los productos (nombre, precio, cantidad)\nconst productosEnCarrito = []; // Declara un array vacío para almacenar los productos en el carrito\n// Función para capturar la información de un producto\nfunction capturarInfoProducto(selectorNombre, selectorPrecio, selectorCantidad) {\n  // Obtiene el texto del nombre del producto\n  return cy.get(selectorNombre).invoke('text').then(nombre => {\n    // Obtiene el texto del precio del producto\n    cy.get(selectorPrecio).invoke('text').then(precio => {\n      // Obtiene el texto de la cantidad del producto\n      cy.get(selectorCantidad).invoke('text').then(cantidad => {\n        // Añade un objeto con el nombre, precio y cantidad al array de productos\n        productosEnCarrito.push({\n          // Elimina espacios en blanco al inicio y final del nombre\n          name: nombre.trim(),\n          // Convierte el texto del precio en un número flotante, eliminando caracteres no numéricos\n          price: parseFloat(precio.replace(/[^\\d.-]/g, '').trim()),\n          // Convierte el texto de la cantidad en un número entero\n          quantity: parseInt(cantidad.trim(), 10)\n        });\n      });\n    });\n  });\n}\n// Captura la información de los tres productos en el carrito\n// Captura la información del primer producto\ncapturarInfoProducto('#item_4_title_link > div', '#cart_contents_container > div > div.cart_list > div:nth-child(3) > div.cart_item_label > div.item_pricebar > div', '#cart_contents_container > div > div.cart_list > div:nth-child(3) > div.cart_quantity');\n// Captura la información del segundo producto\ncapturarInfoProducto('#item_0_title_link > div', '#cart_contents_container > div > div.cart_list > div:nth-child(4) > div.cart_item_label > div.item_pricebar > div', '#cart_contents_container > div > div.cart_list > div:nth-child(4) > div.cart_quantity');\n// Captura la información del tercer producto\ncapturarInfoProducto('#item_1_title_link > div', '#cart_contents_container > div > div.cart_list > div:nth-child(5) > div.cart_item_label > div.item_pricebar > div', '#cart_contents_container > div > div.cart_list > div:nth-child(5) > div.cart_quantity');\n// Navegar a la página de checkout your information\ncy.get('#cart_contents_container > div > div.cart_footer > a.btn_action.checkout_button').click();\n// Selecciona el campo de nombre y escribe\ncy.get(\"#first-name\").click().type(\"Katherine\").wait(1000);\n//Selecciona el campo de apellido y escribe\ncy.get(\"#last-name\").click().type(\"Prendas\").wait(1000);\n//Selecciona el campo de código postal y escribe\ncy.get(\"#postal-code\").click().type(\"60803\").wait(2000);\n//Navega a la página de CHECKOUT:OVERVIEW\ncy.get(\"#checkout_info_container > div > form > div.checkout_buttons > input\").click().wait(2000);\n// Verificar información de los productos en la página de checkout\n//Función para verificar que la información del producto en la página de checkout coincida con la información en el carrito.\nfunction verificarInfoProductoEnCheckout(indice, selectorNombre, selectorPrecio, selectorCantidad) {\n  // Obtiene el nombre del producto en el checkout\n  cy.get(selectorNombre).invoke('text').then(nombreCheckout => {\n    // Obtiene el precio del producto en el checkout\n    cy.get(selectorPrecio).invoke('text').then(precioCheckout => {\n      // Obtiene la cantidad del producto en el checkout\n      cy.get(selectorCantidad).invoke('text').then(cantidadCheckout => {\n        // Obtiene el producto de la lista de productos en el carrito\n        const producto = productosEnCarrito[indice];\n        // Verifica que el nombre del producto en el checkout coincida con el del carrito\n        expect(nombreCheckout.trim()).to.equal(producto.name);\n        // Verifica que el precio del producto en el checkout coincida con el del carrito\n        expect(parseFloat(precioCheckout.replace(/[^\\d.-]/g, '').trim())).to.equal(producto.price);\n        // Verifica que la cantidad del producto en el checkout coincida con la del carrito\n        expect(parseInt(cantidadCheckout.trim(), 10)).to.equal(producto.quantity);\n      });\n    });\n  });\n}\n// Verificar la información de los tres productos en la página de checkout\nverificarInfoProductoEnCheckout(0, '#item_4_title_link > div', '#checkout_summary_container > div > div.cart_list > div:nth-child(3) > div.cart_item_label > div.inventory_item_price', '#checkout_summary_container > div > div.cart_list > div:nth-child(3) > div.summary_quantity');\nverificarInfoProductoEnCheckout(1, '#item_0_title_link > div', '#checkout_summary_container > div > div.cart_list > div:nth-child(4) > div.cart_item_label > div.inventory_item_price', '#checkout_summary_container > div > div.cart_list > div:nth-child(4) > div.summary_quantity');\nverificarInfoProductoEnCheckout(2, '#item_1_title_link > div', '#checkout_summary_container > div > div.cart_list > div:nth-child(5) > div.cart_item_label > div.inventory_item_price', '#checkout_summary_container > div > div.cart_list > div:nth-child(5) > div.summary_quantity');\n// Variable para almacenar el total calculado\nlet totalCalculado = 0;\n// Función para capturar el precio de un producto y sumarlo al total\nfunction capturarPrecioProducto(selectorPrecio) {\n  // Obtiene el texto del precio del producto y lo suma al total calculado\n  return cy.get(selectorPrecio).invoke('text').then(precio => {\n    const precioLimpio = parseFloat(precio.replace(/[^\\d.-]/g, '').trim()); // Limpia el texto, dejando solo números y el punto decimal\n    totalCalculado += precioLimpio; // Suma el precio limpio al total calculado\n  });\n}\n// Captura los precios de los productos y los suma al total calculado\ncapturarPrecioProducto('#checkout_summary_container > div > div.cart_list > div:nth-child(3) > div.cart_item_label > div.inventory_item_price');\ncapturarPrecioProducto('#checkout_summary_container > div > div.cart_list > div:nth-child(4) > div.cart_item_label > div.inventory_item_price');\ncapturarPrecioProducto('#checkout_summary_container > div > div.cart_list > div:nth-child(5) > div.cart_item_label > div.inventory_item_price');\n// Verificar que el total mostrado en la página de checkout sea correcto\ncy.get('#checkout_summary_container > div > div.summary_info > div.summary_subtotal_label').invoke('text').then(textoTotalCheckout => {\n  const totalCheckout = parseFloat(textoTotalCheckout.replace(/[^\\d.-]/g, '').trim()); // Limpia y convierte el texto del total en la página\n  expect(totalCheckout).to.equal(totalCalculado); // Verifica que el total mostrado en la página coincida con el total calculado\n});\ncy.wait(3000); // Espera 3 segundos antes de proceder\ncy.get(\"#checkout_summary_container > div > div.summary_info > div.cart_footer > a.btn_action.cart_button\").click(); // Hace clic en el botón para completar la compra",
              "err": {},
              "uuid": "0bc02d18-d594-4a70-839c-6e802a2dcc05",
              "parentUUID": "15419b03-e15e-47c6-b9cd-75286fe6f702",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bc02d18-d594-4a70-839c-6e802a2dcc05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27610,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}